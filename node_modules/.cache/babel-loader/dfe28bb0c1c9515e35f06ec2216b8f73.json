{"ast":null,"code":"var _jsxFileName = \"/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/screens/login/Login.js\";\nimport { Component } from \"react\";\nimport \"./Login.css\";\nimport { Constants } from \"../../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.onLoginClick = () => {\n      // Admin\n      if (this.state.email === 'admin' && this.state.password === 'admin') {\n        return;\n      } //User \n\n\n      const users = Constants.getToLocalStorage(Constants.DATA_USER);\n      const user = users.filter(account => account.email === this.state.email && account.password === this.state.password).map(item => item);\n\n      if (user.length > 0) {\n        this.props.setUserLoggedIn(user[0]);\n        this.props.handleClose();\n        alert('Welcome ' + user[0].firstName);\n        Constants.saveToLocalStorage(Constants.LOGGED_IN_USER, user[0]);\n        return;\n      }\n\n      alert('Email or password incorrect');\n    };\n\n    this.onInputChange = (type, value) => {\n      const userState = { ...this.state\n      };\n\n      if (type === Constants.EMAIL) {\n        userState.email = value;\n      } else if (type === Constants.PASSWORD) {\n        userState.password = value;\n      }\n\n      this.setState(userState);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => this.onInputChange(Constants.EMAIL, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-style\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => this.onInputChange(Constants.PASSWORD, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onLoginClick,\n        className: \"btn-login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/screens/login/Login.js"],"names":["Component","Constants","Login","state","email","password","onLoginClick","users","getToLocalStorage","DATA_USER","user","filter","account","map","item","length","props","setUserLoggedIn","handleClose","alert","firstName","saveToLocalStorage","LOGGED_IN_USER","onInputChange","type","value","userState","EMAIL","PASSWORD","setState","render","e","target"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFkB;;AAAA,SAO1BC,YAP0B,GAOX,MAAM;AAEjB;AACA,UAAI,KAAKH,KAAL,CAAWC,KAAX,KAAqB,OAArB,IAAgC,KAAKD,KAAL,CAAWE,QAAX,KAAwB,OAA5D,EAAqE;AACjE;AACH,OALgB,CAOjB;;;AACA,YAAME,KAAK,GAAGN,SAAS,CAACO,iBAAV,CAA4BP,SAAS,CAACQ,SAAtC,CAAd;AACA,YAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaC,OAAO,IAC7BA,OAAO,CAACR,KAAR,KAAkB,KAAKD,KAAL,CAAWC,KAA7B,IAAsCQ,OAAO,CAACP,QAAR,KAAqB,KAAKF,KAAL,CAAWE,QAD7D,EAEXQ,GAFW,CAEPC,IAAI,IAAIA,IAFD,CAAb;;AAGA,UAAIJ,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAKC,KAAL,CAAWC,eAAX,CAA2BP,IAAI,CAAC,CAAD,CAA/B;AACA,aAAKM,KAAL,CAAWE,WAAX;AACAC,QAAAA,KAAK,CAAC,aAAaT,IAAI,CAAC,CAAD,CAAJ,CAAQU,SAAtB,CAAL;AACAnB,QAAAA,SAAS,CAACoB,kBAAV,CAA6BpB,SAAS,CAACqB,cAAvC,EAAuDZ,IAAI,CAAC,CAAD,CAA3D;AACA;AACH;;AACDS,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,KA3ByB;;AAAA,SA6B1BI,aA7B0B,GA6BV,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAMC,SAAS,GAAG,EAAE,GAAG,KAAKvB;AAAV,OAAlB;;AACA,UAAIqB,IAAI,KAAKvB,SAAS,CAAC0B,KAAvB,EAA8B;AAC1BD,QAAAA,SAAS,CAACtB,KAAV,GAAkBqB,KAAlB;AACH,OAFD,MAEO,IAAID,IAAI,KAAKvB,SAAS,CAAC2B,QAAvB,EAAiC;AACpCF,QAAAA,SAAS,CAACrB,QAAV,GAAqBoB,KAArB;AACH;;AACD,WAAKI,QAAL,CAAcH,SAAd;AACH,KArCyB;AAAA;;AAuC1BI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKR,aAAL,CAAmBtB,SAAS,CAAC0B,KAA7B,EAAoCI,CAAC,CAACC,MAAF,CAASP,KAA7C;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKR,aAAL,CAAmBtB,SAAS,CAAC2B,QAA7B,EAAuCG,CAAC,CAACC,MAAF,CAASP,KAAhD;AAAxC;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAE,KAAKnB,YAAtB;AAAoC,QAAA,SAAS,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlDyB;;AAqD9B,eAAeJ,KAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./Login.css\"\nimport { Constants } from \"../../Constants\";\n\nclass Login extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    onLoginClick = () => {\n\n        // Admin\n        if (this.state.email === 'admin' && this.state.password === 'admin') {\n            return\n        }\n\n        //User \n        const users = Constants.getToLocalStorage(Constants.DATA_USER);\n        const user = users.filter(account =>\n            account.email === this.state.email && account.password === this.state.password\n        ).map(item => item);\n        if (user.length > 0) {\n            this.props.setUserLoggedIn(user[0]);\n            this.props.handleClose();\n            alert('Welcome ' + user[0].firstName);\n            Constants.saveToLocalStorage(Constants.LOGGED_IN_USER, user[0]);\n            return;\n        }\n        alert('Email or password incorrect');\n    }\n\n    onInputChange = (type, value) => {\n        const userState = { ...this.state };\n        if (type === Constants.EMAIL) {\n            userState.email = value;\n        } else if (type === Constants.PASSWORD) {\n            userState.password = value;\n        }\n        this.setState(userState);\n    }\n\n    render() {\n        return (\n            <div className=\"login-page-container\">\n                <p>Email</p>\n                <input type=\"email\" onChange={(e) => this.onInputChange(Constants.EMAIL, e.target.value)}></input>\n\n                <p className=\"text-style\">Password</p>\n                <input type=\"password\" onChange={(e) => this.onInputChange(Constants.PASSWORD, e.target.value)}></input>\n                <button onClick={this.onLoginClick} className=\"btn-login\">Login</button>\n            </div>\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}