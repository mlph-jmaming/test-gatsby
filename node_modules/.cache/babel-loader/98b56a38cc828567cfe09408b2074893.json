{"ast":null,"code":"var _jsxFileName = \"/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./App.css\";\nimport Login from './screens/login/Login';\nimport Register from './screens/register/Register';\nimport Dialog from '@material-ui/core/Dialog';\nimport DashBoard from './screens/dashboard/DashBoard';\nimport LoggedInUser from './screens/logged-in-user/LoggedInUser';\nimport { User } from './model/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = 'login';\nconst REGISTER = 'register';\nvar type = LOGIN;\nvar isLogin = true;\n\nconst App = () => {\n  _s();\n\n  state = {\n    user: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  };\n  const [open, setOpen] = React.useState(false);\n  const [user, setUser] = React.useState();\n\n  const loginOnClick = () => {\n    type = LOGIN;\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const registerOnClick = () => {\n    type = REGISTER;\n    setOpen(true);\n  };\n\n  setUserLoggedIn = user => {\n    if (user != null) {\n      this.state = {\n        user\n      };\n    } else {\n      this.state = {\n        user: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this)\n      };\n    }\n  };\n\n  const isUserLoggedIn = () => {\n    if (isLogin) {\n      return /*#__PURE__*/_jsxDEV(LoggedInUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(DashBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [isUserLoggedIn(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: loginOnClick,\n          className: \"login-style\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-style\",\n          children: \" / \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: registerOnClick,\n          className: \"login-style\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: type === LOGIN ? /*#__PURE__*/_jsxDEV(Login, {\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3wbRXu+LWgu7xgu3kN5ruueGXaY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/App.js"],"names":["React","Login","Register","Dialog","DashBoard","LoggedInUser","User","LOGIN","REGISTER","type","isLogin","App","state","user","open","setOpen","useState","setUser","loginOnClick","handleClose","registerOnClick","setUserLoggedIn","isUserLoggedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./App.css\";\nimport Login from './screens/login/Login';\nimport Register from './screens/register/Register'\nimport Dialog from '@material-ui/core/Dialog';\nimport DashBoard from './screens/dashboard/DashBoard';\nimport LoggedInUser from './screens/logged-in-user/LoggedInUser'\nimport { User } from './model/user';\n\nconst LOGIN = 'login';\nconst REGISTER = 'register';\nvar type = LOGIN;\nvar isLogin = true;\n\nconst App = () => {\n\n  state = {\n    user: <User />\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [user, setUser] = React.useState();\n\n  const loginOnClick = () => {\n    type = LOGIN;\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const registerOnClick = () => {\n    type = REGISTER;\n    setOpen(true);\n  }\n\n  setUserLoggedIn = (user) => {\n    if (user != null) {\n      this.state = { user };\n    } else {\n      this.state = { user: <User /> }\n    }\n  }\n\n  const isUserLoggedIn = () => {\n    if (isLogin) {\n      return <LoggedInUser />\n    } else {\n      return <DashBoard />\n    }\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"center-container\">\n        {\n          isUserLoggedIn()\n        }\n        <div className=\"login-container\">\n          <a onClick={loginOnClick} className=\"login-style\">Login</a>\n          <p className=\"login-style\"> / </p>\n          <a onClick={registerOnClick} className=\"login-style\">Sign up</a>\n        </div>\n      </div>\n\n      <Dialog open={open} onClose={handleClose}>\n        {\n          type === LOGIN ? <Login handleClose={handleClose} /> : <Register handleClose={handleClose} />\n        }\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}