{"ast":null,"code":"var _jsxFileName = \"/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/screens/register/Register.js\";\nimport { Component } from \"react\";\nimport \"./Register.css\";\nimport { Constants } from \"../../Constants\";\nimport { User } from \"../../model/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super(); // localStorage.removeItem(Constants.DATA_USER);\n\n    this.state = {\n      users: [],\n      user: User\n    };\n\n    this.onRegister = () => {\n      if (this.state.user.firstName === '' || this.state.user.lastName === '' || this.state.user.address === '' || this.state.user.email === '' || this.state.user.password === '') {\n        alert('Please complete the fields');\n        return;\n      }\n\n      const isUserExist = this.state.users.filter(user => user.email === this.state.users.email).map(existingUser => existingUser);\n\n      if (isUserExist.length > 0) {\n        alert('User already exist');\n      }\n\n      this.state.users.push(this.state.user);\n      Constants.saveToLocalStorage(Constants.DATA_USER, this.state.users);\n      this.props.handleClose();\n    };\n\n    this.onTextChange = (event, type) => {\n      const userState = { ...this.state.user\n      };\n\n      if (userState.id === 0) {\n        userState.id = this.state.users.length + 1;\n      }\n\n      switch (type) {\n        case Constants.FIRST_NAME:\n          {\n            userState.firstName = event.target.value;\n            break;\n          }\n\n        case Constants.LAST_NAME:\n          {\n            userState.lastName = event.target.value;\n            break;\n          }\n\n        case Constants.ADDRESS:\n          {\n            userState.address = event.target.value;\n            break;\n          }\n\n        case Constants.EMAIL:\n          {\n            userState.email = event.target.value;\n            break;\n          }\n\n        case Constants.PASSWORD:\n          {\n            userState.password = event.target.value;\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n\n      this.setState({\n        user: userState\n      });\n    };\n\n    this.state.users = Constants.getToLocalStorage(Constants.DATA_USER) === null ? [] : Constants.getToLocalStorage(Constants.DATA_USER);\n    this.state.user = new User();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.onTextChange(event, Constants.FIRST_NAME)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-style\",\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.onTextChange(event, Constants.LAST_NAME)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-style\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.onTextChange(event, Constants.ADDRESS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-style\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.onTextChange(event, Constants.EMAIL)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-style\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: event => this.onTextChange(event, Constants.PASSWORD)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-register\",\n        onClick: () => this.onRegister(),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/screens/register/Register.js"],"names":["Component","Constants","User","Register","constructor","state","users","user","onRegister","firstName","lastName","address","email","password","alert","isUserExist","filter","map","existingUser","length","push","saveToLocalStorage","DATA_USER","props","handleClose","onTextChange","event","type","userState","id","FIRST_NAME","target","value","LAST_NAME","ADDRESS","EMAIL","PASSWORD","setState","getToLocalStorage","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport \"./Register.css\";\nimport { Constants } from \"../../Constants\";\nimport { User } from \"../../model/user\";\n\nclass Register extends Component {\n\n    state = {\n        users: [],\n        user: User\n    }\n\n    constructor() {\n        super();\n        // localStorage.removeItem(Constants.DATA_USER);\n        this.state.users = Constants.getToLocalStorage(Constants.DATA_USER) === null ? []\n            : Constants.getToLocalStorage(Constants.DATA_USER);\n        this.state.user = new User();\n\n    }\n\n\n    onRegister = () => {\n        if (this.state.user.firstName === ''\n            || this.state.user.lastName === ''\n            || this.state.user.address === ''\n            || this.state.user.email === ''\n            || this.state.user.password === '') {\n            alert('Please complete the fields');\n            return;\n        }\n\n        const isUserExist = this.state.users.filter(user =>\n            user.email === this.state.users.email).map(existingUser => existingUser);\n\n        if (isUserExist.length > 0) {\n            alert('User already exist');\n        }\n\n        this.state.users.push(this.state.user);\n        Constants.saveToLocalStorage(Constants.DATA_USER, this.state.users);\n        this.props.handleClose();\n    }\n\n    onTextChange = (event, type) => {\n        const userState = { ...this.state.user };\n        if (userState.id === 0) {\n            userState.id = this.state.users.length + 1;\n        }\n        switch (type) {\n            case Constants.FIRST_NAME: {\n                userState.firstName = event.target.value;\n                break;\n            }\n            case Constants.LAST_NAME: {\n                userState.lastName = event.target.value\n                break;\n            }\n            case Constants.ADDRESS: {\n                userState.address = event.target.value\n                break;\n            }\n            case Constants.EMAIL: {\n                userState.email = event.target.value\n                break;\n            }\n            case Constants.PASSWORD: {\n                userState.password = event.target.value\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n        this.setState({ user: userState });\n    }\n\n    render() {\n        return (\n            <div className=\"register-page-container\">\n                <p>First Name:</p>\n                <input type=\"text\" onChange={(event) => this.onTextChange(event, Constants.FIRST_NAME)}></input>\n\n                <p className=\"title-style\">Last Name:</p>\n                <input type=\"text\" onChange={(event) => this.onTextChange(event, Constants.LAST_NAME)}></input>\n\n                <p className=\"title-style\">Address:</p>\n                <input type=\"text\" onChange={(event) => this.onTextChange(event, Constants.ADDRESS)}></input>\n\n                <p className=\"title-style\">Email:</p>\n                <input type=\"text\" onChange={(event) => this.onTextChange(event, Constants.EMAIL)}></input>\n\n                <p className=\"title-style\" >Password:</p>\n                <input type=\"password\" onChange={(event) => this.onTextChange(event, Constants.PASSWORD)}></input>\n                <button className=\"btn-register\" onClick={() => this.onRegister()}>Register</button>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}