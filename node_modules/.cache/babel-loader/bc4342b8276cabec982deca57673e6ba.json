{"ast":null,"code":"var _jsxFileName = \"/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/components/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Login() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        children: \"Optional sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"You can set my maximum width and whether to adapt or not.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"max-width\",\n              children: \"maxWidth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              autoFocus: true,\n              value: maxWidth,\n              onChange: handleMaxWidthChange,\n              inputProps: {\n                name: 'max-width',\n                id: 'max-width'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xs\",\n                children: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"sm\",\n                children: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"md\",\n                children: \"md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lg\",\n                children: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xl\",\n                children: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: classes.formControlLabel,\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: fullWidth,\n              onChange: handleFullWidthChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 38\n            }, this),\n            label: \"Full width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"+y8K8bAFawEt2NwysoWG9YuBH6s=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mlph-jerico/Documents/GitHub/react_js_training/react-training/src/components/login/Login.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","Login","classes","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","name","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [fullWidth, setFullWidth] = React.useState(true);\n    const [maxWidth, setMaxWidth] = React.useState('sm');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleMaxWidthChange = (event) => {\n        setMaxWidth(event.target.value);\n    };\n\n    const handleFullWidthChange = (event) => {\n        setFullWidth(event.target.checked);\n    };\n\n    return (\n        <React.Fragment>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n                    <form className={classes.form} noValidate>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                            <Select\n                                autoFocus\n                                value={maxWidth}\n                                onChange={handleMaxWidthChange}\n                                inputProps={{\n                                    name: 'max-width',\n                                    id: 'max-width',\n                                }}\n                            >\n                                <MenuItem value={false}>false</MenuItem>\n                                <MenuItem value=\"xs\">xs</MenuItem>\n                                <MenuItem value=\"sm\">sm</MenuItem>\n                                <MenuItem value=\"md\">md</MenuItem>\n                                <MenuItem value=\"lg\">lg</MenuItem>\n                                <MenuItem value=\"xl\">xl</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\n                            label=\"Full width\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}